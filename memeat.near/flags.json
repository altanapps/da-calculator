{
  "components": {
    "memeat.near/widget/da-calculator": {
      "code": "const TGas = Big(10).pow(12);\n\nState.init({\n  tab: \"DA Calculator\", // Mint / Indexer / Transfer\n  dataToSend: \"346\", // Added for the new input field\n  result: null,\n});\n\nconst FormInputContainer = styled.div`\n  display: flex;\n  flex-direction: column;\n`;\n\nconst FormInputLabel = styled.div`\n  display: flex;\n  justify-content: space-between;\n  align-items: end;\n`;\n\nconst FormInputRow = styled.div`\n  display: flex;\n  justify-content: space-between;\n  height: 50px;\n  margin-top: 12px;\n  border-radius: 12px;\n  padding: 0 16px;\n  align-items: center;\n`;\n\nconst FormInputTitle = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst UnitContent = styled.div`\n  font-size: 18px;\n  font-weight: bold;\n`;\n\nconst Main = styled.div`\n  width: 100%;\n  min-height: 90vh;\n  overflow: hidden;\n  background: #101010;\n  background-image: url(${ipfsPrefix}/bafkreiak6rio66kqjsobw25gtmy5a7fwwsa4hjn3d25a4tppfylbdepbjq);\n  background-repeat: no-repeat;\n  background-size: cover;\n  padding: 0 16px;\n  color: white;\n  @media (min-width: 640px) {\n    padding: 0 40px;\n  }\n`;\n\nconst Spacer = styled.div``;\n\nconst BodyContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  flex-direction: column;\n  gap: 20px;\n  margin: 40px 0;\n`;\n\nconst HeaderContainer = styled.div`\n  padding: 18px 0;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst TabContainer = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  gap: 56px;\n`;\n\nconst TabItem = styled.div`\n  cursor: pointer;\n  font-size: 18px;\n  font-weight: 600;\n  ${(props) => !props.selected && \"opacity: 0.4;\"}\n`;\n\nconst FormContainer = styled.div`\n  max-width: 650px;\n  width: 100%;\n  background: #141414;\n  border-radius: 4px;\n  border: 1px solid #ffffff1a;\n  display: flex;\n  flex-direction: column;\n  gap: 36px;\n\n  padding: 16px;\n  @media (min-width: 640px) {\n    padding: 24px;\n  }\n`;\n\nState.init({\n  tab: \"DA Calculator\", // Mint / Indexer / Transfer\n});\n\nconst fetchDACalculatorData = async (blobSizes) => {\n  try {\n    const response = await fetch(\n      \"https://da-calculator-697b837afec5.herokuapp.com/estimateFee\",\n      {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\",\n        },\n        body: JSON.stringify({ blobSizes: [blobSizes] }),\n      }\n    );\n\n    if (!response.ok) {\n      throw new Error(`HTTP error! status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return data; // This is the response data from the API\n  } catch (error) {\n    console.error(\"Could not fetch data from DA Calculator:\", error);\n  }\n};\n\nconst handleSubmit = async (event) => {\n  event.preventDefault(); // Prevent the default form submission behavior\n  const result = await fetchDACalculatorData(dataSize);\n\n  // Here you can set the state with the result or process it as needed\n  State.update({ result });\n  return result; // For demonstration purposes, we're just logging it\n};\n\nvar { tab, dataToSend, result } = state;\nreturn (\n  <Main>\n    <HeaderContainer>\n      <TabContainer>\n        <TabItem\n          selected={tab === \"DA Calculator\"}\n          onClick={() => State.update({ tab: \"DA Calculator\" })}\n        >\n          DA Calculator\n        </TabItem>\n      </TabContainer>\n      <Spacer />\n    </HeaderContainer>\n    <BodyContainer>\n      {tab === \"DA Calculator\" && (\n        <>\n          <FormInputContainer>\n            <FormInputLabel>\n              <FormInputTitle>Data to Send (Bytes)</FormInputTitle>\n            </FormInputLabel>\n            <FormInputRow\n              style={{\n                border: `1px solid ${varientColor}`,\n              }}\n            >\n              <input\n                type=\"number\" // Ensures only numbers can be entered\n                style={{\n                  width: \"100%\",\n                  background: \"transparent\",\n                  border: \"0\",\n                  fontSize: \"16px\",\n                  fontWeight: \"bold\",\n                  color: \"#FFFFFF\", // Set text color to white\n                  outline: \"none\",\n                  boxShadow: \"none\",\n                  marginRight: \"16px\",\n                  WebkitAppearance: \"none\",\n                  MozAppearance: \"textfield\",\n                }}\n                value={state.dataToSend}\n                onChange={(e) => State.update({ dataToSend: e.target.value })}\n                spellCheck=\"false\"\n              />\n              <UnitContent>Bytes</UnitContent>\n            </FormInputRow>\n            {/* Submit Button */}\n            <button\n              type=\"submit\"\n              style={{\n                padding: \"12px 24px\", // Slightly larger padding for a bigger button\n                fontSize: \"16px\",\n                fontWeight: \"bold\",\n                color: \"#FFFFFF\", // White text color for contrast\n                backgroundColor: \"\", // A shade of green that matches your design\n                border: \"none\",\n                borderRadius: \"8px\", // Rounded corners\n                cursor: \"pointer\",\n                marginTop: \"20px\",\n                boxShadow: \"0 4px 14px 0 rgba(0, 0, 0, 0.25)\", // Optional: adds a subtle shadow for depth\n                transition: \"background-color 0.3s\", // Smooth transition for hover effect\n              }}\n              onMouseOver={(e) => (e.target.style.backgroundColor = \"#16ab39\")} // Darker shade on hover\n              onMouseOut={(e) => (e.target.style.backgroundColor = \"#21ba45\")} // Original color on mouse out\n              onClick={handleSubmit}\n            >\n              Submit\n            </button>\n          </FormInputContainer>\n          {result && (\n            <div>\n              <h2>Result:</h2>\n              <p>{JSON.stringify(result)}</p>\n            </div>\n          )}\n        </>\n      )}\n    </BodyContainer>\n  </Main>\n);\n"
    },
    "da-calculator.jsx/widget/": {
      "code": ""
    }
  }
}